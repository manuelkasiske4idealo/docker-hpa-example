---
apiVersion: v1
kind: Namespace
metadata:
  name: hpa-example
  labels:
    name: hpa-example
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver-deployment
  namespace: hpa-example
spec:
  selector:
    matchLabels:
      run: webserver
  replicas: 1
  template:
    metadata:
      labels:
        run: webserver
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: webserver
        volumeMounts:
        - mountPath: /tmp/
          name: tmp
          readOnly: false
        - mountPath: /.cache
          name: cache
          readOnly: false
        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
            add:
             - NET_BIND_SERVICE
        image: manuelkasiske/docker-hpa-example
        ports:
          - containerPort: 80
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: webserver-service
  namespace: hpa-example
  labels:
    run: webserver
spec:
  ports:
  - port: 80
    targetPort: 1025
  type: NodePort
  selector:
    run: webserver
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: webserver-hpa
  namespace: hpa-example
  labels:
    app.kubernetes.io/name: webserver
    app.kubernetes.io/instance: webserver
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: webserver-deployment
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 20
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  # ####### change the namespace #######
  namespace: hpa-example
  name: webserver-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    # creates only HTTPS listener
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    # ####### change the hostname #######
    external-dns.alpha.kubernetes.io/hostname: webserver.eks-sandbox.aws.idealo.cloud
spec:
  rules:
    # You need the host part to have cert auto-discovery in place
    # ####### change the hostname #######
    - host: webserver.eks-sandbox.aws.idealo.cloud
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: webserver-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations:
  labels:
    run: webserver
  name: allow-all
spec:
  egress:
  - {}
  ingress:
  - {}
  podSelector: {}
  policyTypes:
  - Egress
  - Ingress
